{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshith\\\\Desktop\\\\EntityFormating_Frontend\\\\entity-app\\\\src\\\\components\\\\TableShow.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport TESTdata from './Test.json';\nimport { COLUMNS } from './Columns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableShow = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => TESTdata, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    rows,\n    prepareRow,\n    headerGroups,\n    getRowProps\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(columns => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...columns.getHeaderProps(),\n          children: columns.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TableShow, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n_c = TableShow;\nexport default TableShow;\nvar _c;\n$RefreshReg$(_c, \"TableShow\");","map":{"version":3,"names":["React","useMemo","useTable","TESTdata","COLUMNS","TableShow","columns","data","tableInstance","getTableProps","getTableBodyProps","rows","prepareRow","headerGroups","getRowProps","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","row","cells","cell","getCellProps"],"sources":["C:/Users/Rakshith/Desktop/EntityFormating_Frontend/entity-app/src/components/TableShow.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport {useTable} from 'react-table'\r\nimport TESTdata from './Test.json'\r\nimport { COLUMNS } from './Columns'\r\n\r\nconst TableShow = () => {\r\n  \r\n  const columns = useMemo(()=>COLUMNS,[])\r\n  const data = useMemo(()=>TESTdata,[])\r\n  const tableInstance = useTable({\r\n    columns,\r\n    data\r\n  })\r\n  const{\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    rows,\r\n    prepareRow,\r\n    headerGroups,\r\n    getRowProps\r\n  } = tableInstance\r\n  \r\n  return (\r\n    <table {...getTableProps()}>\r\n        <thead>\r\n            {headerGroups.map((headerGroup) =>(\r\n  \r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map((columns) =>(\r\n                            <th {...columns.getHeaderProps()}>\r\n                                {columns.render('Header')}\r\n                            </th>\r\n                        ))}\r\n                </tr>\r\n\r\n             ))\r\n                \r\n            } \r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {\r\n                rows.map((row) => {\r\n                     prepareRow(row)\r\n                     return(\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map((cell) => {\r\n                                return <td {...cell.getCellProps()}>\r\n                                    {cell.render('cell')}\r\n                                </td>\r\n                            })}\r\n                        </tr>\r\n                     )\r\n                })\r\n            }\r\n        </tbody>\r\n    </table>\r\n  )\r\n}\r\nexport default TableShow"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAAQC,QAAQ,QAAO,aAAa;AACpC,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,OAAO,QAAQ,WAAW;AAAA;AAEnC,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEtB,MAAMC,OAAO,GAAGL,OAAO,CAAC,MAAIG,OAAO,EAAC,EAAE,CAAC;EACvC,MAAMG,IAAI,GAAGN,OAAO,CAAC,MAAIE,QAAQ,EAAC,EAAE,CAAC;EACrC,MAAMK,aAAa,GAAGN,QAAQ,CAAC;IAC7BI,OAAO;IACPC;EACF,CAAC,CAAC;EACF,MAAK;IACHE,aAAa;IACbC,iBAAiB;IACjBC,IAAI;IACJC,UAAU;IACVC,YAAY;IACZC;EACF,CAAC,GAAGN,aAAa;EAEjB,oBACE;IAAA,GAAWC,aAAa,EAAE;IAAA,wBACtB;MAAA,UACKI,YAAY,CAACE,GAAG,CAAEC,WAAW,iBAE1B;QAAA,GAAQA,WAAW,CAACC,mBAAmB,EAAE;QAAA,UACpCD,WAAW,CAACE,OAAO,CAACH,GAAG,CAAET,OAAO,iBACzB;UAAA,GAAQA,OAAO,CAACa,cAAc,EAAE;UAAA,UAC3Bb,OAAO,CAACc,MAAM,CAAC,QAAQ;QAAC;UAAA;UAAA;UAAA;QAAA,QAEhC;MAAC;QAAA;QAAA;QAAA;MAAA,QAGZ;IAAC;MAAA;MAAA;MAAA;IAAA,QAGC,eACR;MAAA,GAAWV,iBAAiB,EAAE;MAAA,UAEtBC,IAAI,CAACI,GAAG,CAAEM,GAAG,IAAK;QACbT,UAAU,CAACS,GAAG,CAAC;QACf,oBACG;UAAA,GAAQA,GAAG,CAACP,WAAW,EAAE;UAAA,UACpBO,GAAG,CAACC,KAAK,CAACP,GAAG,CAAEQ,IAAI,IAAK;YACrB,oBAAO;cAAA,GAAQA,IAAI,CAACC,YAAY,EAAE;cAAA,UAC7BD,IAAI,CAACH,MAAM,CAAC,MAAM;YAAC;cAAA;cAAA;cAAA;YAAA,QACnB;UACT,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACD;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEZ,CAAC;AAAA,GApDKf,SAAS;EAAA,QAISH,QAAQ;AAAA;AAAA,KAJ1BG,SAAS;AAqDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}