{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshith\\\\Desktop\\\\EntityFormating_Frontend\\\\entity-app\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import {\n//   FormControl,\n//   Grid,\n//   InputLabel,\n//   MenuItem,\n//   Select,\n//   Typography,\n// } from \"@mui/material\";\nimport dayjs from 'dayjs';\nimport Main from \"./Main\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { format } from \"./Util/Formatt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _format$selectedColum;\n  const [rows, setRows] = useState([]);\n  const [updatedRow, setUpdatedRow] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [selectedColumn, setSelectedColumn] = useState(\"\");\n  const [selectedFormat, setSelectedFormat] = useState(\"\");\n  const handleColumns = _ref => {\n    let {\n      columns,\n      rows\n    } = _ref;\n    setColumns(columns);\n    setRows(rows);\n  };\n  const handleFormat = e => {\n    setSelectedFormat(e.target.value);\n    let result = [];\n    if (selectedColumn === \"date\") {\n      if (e.target.value === \"mm-dd-yyyy\") {\n        result = rows.filter(item => {\n          const updatedDate = dayjs(item[selectedColumn]);\n          console.log(updatedDate);\n          item[selectedColumn] = updatedDate.format(\"MM DD YYYY\");\n          return item;\n        });\n      } else if (e.target.value === \"yyyy-mm-dd\") {\n        result = rows.filter(item => {\n          const updatedDate = dayjs(item[selectedColumn]);\n          console.log(updatedDate);\n          item[selectedColumn] = updatedDate.format(\"YYYY MM DD\");\n          return item;\n        });\n      }\n    } else if (selectedColumn === \"name\") {\n      if (e.target.value === \"Uppercase\") {\n        result = rows.filter(item => {\n          const updatedName = item[selectedColumn].toUpperCase();\n          console.log(updatedName);\n          item[selectedColumn] = updatedName.format(\"Uppercase\");\n          return item;\n        });\n      } else if (e.target.value === \"Lowercase\") {\n        result = rows.filter(item => {\n          const updatedName = item[selectedColumn].toLowerCase();\n          console.log(updatedName);\n          item[selectedColumn] = updatedName.format(\"Lowercase\");\n          return item;\n        });\n      }\n      setUpdatedRow(result);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"50px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              margin: \"1rem 0\"\n            },\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"demo-simple-select-label\",\n              children: \"Select Column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"demo-select\",\n              className: \"form-select\",\n              value: selectedColumn,\n              label: \"Select Column\",\n              onChange: e => setSelectedColumn(e.target.value),\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: column.accessor,\n                children: column.Header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"1rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"demo-simple-select-label\",\n              children: \"Format Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              labelId: \"demo-simple-select-label\",\n              className: \"form-select\",\n              id: \"demo-simple-select\",\n              value: selectedFormat,\n              label: \"Format Options\",\n              onChange: handleFormat,\n              children: (_format$selectedColum = format[selectedColumn]) === null || _format$selectedColum === void 0 ? void 0 : _format$selectedColum.map(val => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val,\n                children: val\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Main, {\n          handleColumns: handleColumns,\n          updatedRows: updatedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"haxVG4nlwoVWeRr6KU3swsaErfM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","dayjs","Main","format","Dashboard","rows","setRows","updatedRow","setUpdatedRow","columns","setColumns","selectedColumn","setSelectedColumn","selectedFormat","setSelectedFormat","handleColumns","handleFormat","e","target","value","result","filter","item","updatedDate","console","log","updatedName","toUpperCase","toLowerCase","marginTop","margin","map","column","accessor","Header","val"],"sources":["C:/Users/Rakshith/Desktop/EntityFormating_Frontend/entity-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import {\r\n//   FormControl,\r\n//   Grid,\r\n//   InputLabel,\r\n//   MenuItem,\r\n//   Select,\r\n//   Typography,\r\n// } from \"@mui/material\";\r\nimport dayjs from 'dayjs';\r\nimport Main from \"./Main\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { format } from \"./Util/Formatt\";\r\n\r\nconst Dashboard = () => {\r\n  const [rows, setRows] = useState([]);\r\n  const [updatedRow, setUpdatedRow] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [selectedColumn, setSelectedColumn] = useState(\"\");\r\n  const [selectedFormat, setSelectedFormat] = useState(\"\");\r\n\r\n  const handleColumns = ({ columns, rows }) => {\r\n    setColumns(columns);\r\n    setRows(rows);\r\n  };\r\n\r\n  const handleFormat = (e) => {\r\n    setSelectedFormat(e.target.value);\r\n\r\n    let result = [];\r\n\r\n    if (selectedColumn === \"date\") {\r\n      if(e.target.value === \"mm-dd-yyyy\"){\r\n        result = rows.filter((item)=>{\r\n          const updatedDate = dayjs(item[selectedColumn]);\r\n          console.log(updatedDate)\r\n          item[selectedColumn] = updatedDate.format(\"MM DD YYYY\");\r\n          return item;\r\n        })\r\n      }else if(e.target.value === \"yyyy-mm-dd\"){\r\n        result = rows.filter((item)=>{\r\n          const updatedDate = dayjs(item[selectedColumn]);\r\n          console.log(updatedDate)\r\n          item[selectedColumn] = updatedDate.format(\"YYYY MM DD\");\r\n          return item;\r\n        })\r\n      }\r\n    }else if(selectedColumn === \"name\") {\r\n      if(e.target.value === \"Uppercase\"){\r\n        result = rows.filter((item)=>{\r\n          const updatedName = item[selectedColumn].toUpperCase();\r\n          console.log(updatedName)\r\n          item[selectedColumn] = updatedName.format(\"Uppercase\");\r\n          return item;\r\n       })\r\n      }else if(e.target.value === \"Lowercase\"){\r\n        result = rows.filter((item)=>{\r\n          const updatedName = item[selectedColumn].toLowerCase();\r\n          console.log(updatedName)\r\n          item[selectedColumn] = updatedName.format(\"Lowercase\");\r\n          return item;\r\n        })\r\n    }\r\n    setUpdatedRow(result);\r\n    }\r\n  } \r\n  return (\r\n    <div style={{ marginTop: \"50px\" }}>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <h6\r\n              style={{ margin: \"1rem 0\" }}\r\n            >\r\n              Actions\r\n            </h6>\r\n            <form>\r\n              <label id='demo-simple-select-label'>\r\n                Select Column\r\n                </label>\r\n              <select id=\"demo-select\" className=\"form-select\" value={selectedColumn} label=\"Select Column\"\r\n              onChange={(e)=> setSelectedColumn(e.target.value)}>\r\n                {columns.map((column) => (\r\n                  <option value={column.accessor}>{column.Header}</option>\r\n                ))}\r\n              </select>\r\n            </form>\r\n          </div>\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <form>\r\n              <label id='demo-simple-select-label'>\r\n                Format Options\r\n              </label>\r\n              <select\r\n                labelId='demo-simple-select-label'\r\n                className=\"form-select\"\r\n                id='demo-simple-select'\r\n                value={selectedFormat}\r\n                label='Format Options'\r\n                onChange={handleFormat}\r\n              >\r\n                {format[selectedColumn]?.map((val) => (\r\n                  <option value={val}>{val}</option>\r\n                ))}\r\n              </select>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\"\r\n        >\r\n          <Main\r\n            handleColumns={handleColumns}\r\n            updatedRows={updatedRow}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}