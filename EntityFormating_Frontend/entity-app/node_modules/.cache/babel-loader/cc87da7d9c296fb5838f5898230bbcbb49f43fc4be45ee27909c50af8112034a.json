{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactDom = require(\"react-dom\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _utils = require(\"@mui/utils\");\nvar _system = require(\"@mui/system\");\nvar _base = require(\"@mui/base\");\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\nvar _utils2 = require(\"../transitions/utils\");\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"BackdropProps\"],\n  _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nfunction reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\nfunction computeHasNativeHandler(_ref) {\n  let {\n    domTreeShapes,\n    start,\n    current,\n    anchor\n  } = _ref;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _system.useThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _useTheme.default)();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      anchor = 'left',\n      disableBackdropTransition = false,\n      disableDiscovery = false,\n      disableSwipeToOpen = iOS,\n      hideBackdrop,\n      hysteresis = 0.52,\n      minFlingVelocity = 450,\n      ModalProps: {\n        BackdropProps\n      } = {},\n      onClose,\n      onOpen,\n      open,\n      PaperProps = {},\n      SwipeAreaProps,\n      swipeAreaWidth = 20,\n      transitionDuration = transitionDurationDefault,\n      variant = 'temporary'\n    } = props,\n    ModalPropsProp = (0, _objectWithoutPropertiesLoose2.default)(props.ModalProps, _excluded),\n    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback(function (translate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    (0, _reactDom.flushSync)(() => {\n      setMaybeSwiping(false);\n    }); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    (0, _reactDom.flushSync)(() => {\n      setMaybeSwiping(true);\n    });\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, (0, _extends2.default)({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: (0, _extends2.default)({}, PaperProps, {\n        style: (0, _extends2.default)({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_base.NoSsr, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwipeArea.default, (0, _extends2.default)({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: _propTypes.default.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */.shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","reset","_extends2","_objectWithoutPropertiesLoose2","React","_interopRequireWildcard","_reactDom","_propTypes","_utils","_system","_base","_Drawer","_ownerDocument","_ownerWindow","_useEventCallback","_useEnhancedEffect","_useTheme","_utils2","_SwipeArea","_jsxRuntime","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","SwipeableDrawer","forwardRef","inProps","ref","props","useThemeProps","name","theme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","minFlingVelocity","ModalProps","BackdropProps","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","ModalPropsProp","other","maybeSwiping","setMaybeSwiping","useState","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","mode","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","indexOf","isHorizontal","transform","drawerStyle","webkitTransform","transition","create","getTransitionProps","easing","undefined","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","flushSync","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","useEffect","addEventListener","passive","removeEventListener","jsxs","Fragment","children","jsx","keepMounted","pointerEvents","NoSsr","width","process","env","NODE_ENV","propTypes","oneOf","node","bool","number","component","elementTypeAcceptingRef","func","isRequired","object","oneOfType","appear","_default"],"sources":["C:/Users/Rakshith/Desktop/EntityFormating_Frontend/entity-app/node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _base = require(\"@mui/base\");\n\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\n\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _utils2 = require(\"../transitions/utils\");\n\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nfunction reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\n\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _system.useThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _useTheme.default)();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps\n    } = {},\n    onClose,\n    onOpen,\n    open,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary'\n  } = props,\n        ModalPropsProp = (0, _objectWithoutPropertiesLoose2.default)(props.ModalProps, _excluded),\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    (0, _reactDom.flushSync)(() => {\n      setMaybeSwiping(false);\n    }); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    (0, _reactDom.flushSync)(() => {\n      setMaybeSwiping(true);\n    });\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, (0, _extends2.default)({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: (0, _extends2.default)({}, PaperProps, {\n        style: (0, _extends2.default)({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_base.NoSsr, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwipeArea.default, (0, _extends2.default)({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: _propTypes.default.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}