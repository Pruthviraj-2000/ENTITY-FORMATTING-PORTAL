{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshith\\\\Desktop\\\\EntityFormating_Frontend\\\\entity-app\\\\src\\\\components\\\\TableShow.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport TESTdata from './Test.json';\nimport { COLUMNS } from './Columns';\nimport { GrAscend, GrDescend } from \"react-icons/gr\";\n\n// const TableShow = () => {\n\n//   const columns = useMemo(()=>COLUMNS,[])\n//   const data = useMemo(()=>TESTdata,[])\n//   const tableInstance = useTable({\n//     columns,\n//     data\n//   })\n//   const{\n//     getTableProps,\n//     getTableBodyProps,\n//     rows,\n//     prepareRow,\n//     headerGroups,\n//   } = tableInstance\n\n//   return (\n//     <table {...getTableProps()}>\n//         <thead>\n//             {headerGroups.map((headerGroup) =>(\n\n//                 <tr {...headerGroup.getHeaderGroupProps()}>\n//                     {headerGroup.headers.map((columns) =>(\n//                             <th {...columns.getHeaderProps()}>\n//                                 {columns.render('Headers')}\n//                             </th>\n//                         ))}\n//                 </tr>\n\n//              ))\n\n//             } \n//         </thead>\n//         <tbody {...getTableBodyProps()}>\n//             {\n//                 rows.map((row) => {\n//                      prepareRow(row)\n//                      return(\n//                         <tr {...row.getRowProps()}>\n//                             {row.cells.map((cell) => {\n//                                 return <td {...cell.getCellProps()}>\n//                                     {cell.render('Cell')}\n//                                 </td>\n//                             })}\n//                         </tr>\n//                      )\n//                 })\n//             }\n//         </tbody>\n//     </table>\n//   )\n// }\n// export default TableShow\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactTable(_ref) {\n  _s();\n  let {\n    rowData,\n    columnData\n  } = _ref;\n  const data = rowData;\n  const columns = columnData;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    className: \"table table-striped table-hover\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(GrDescend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(GrAscend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 26\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n_s(ReactTable, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n_c = ReactTable;\nvar _c;\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["React","useMemo","useTable","useSortBy","TESTdata","COLUMNS","GrAscend","GrDescend","ReactTable","rowData","columnData","data","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell"],"sources":["C:/Users/Rakshith/Desktop/EntityFormating_Frontend/entity-app/src/components/TableShow.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport {useTable,useSortBy} from 'react-table'\r\nimport TESTdata from './Test.json'\r\nimport { COLUMNS } from './Columns'\r\nimport { GrAscend, GrDescend } from \"react-icons/gr\";\r\n\r\n// const TableShow = () => {\r\n  \r\n//   const columns = useMemo(()=>COLUMNS,[])\r\n//   const data = useMemo(()=>TESTdata,[])\r\n//   const tableInstance = useTable({\r\n//     columns,\r\n//     data\r\n//   })\r\n//   const{\r\n//     getTableProps,\r\n//     getTableBodyProps,\r\n//     rows,\r\n//     prepareRow,\r\n//     headerGroups,\r\n//   } = tableInstance\r\n  \r\n//   return (\r\n//     <table {...getTableProps()}>\r\n//         <thead>\r\n//             {headerGroups.map((headerGroup) =>(\r\n  \r\n//                 <tr {...headerGroup.getHeaderGroupProps()}>\r\n//                     {headerGroup.headers.map((columns) =>(\r\n//                             <th {...columns.getHeaderProps()}>\r\n//                                 {columns.render('Headers')}\r\n//                             </th>\r\n//                         ))}\r\n//                 </tr>\r\n\r\n//              ))\r\n                \r\n//             } \r\n//         </thead>\r\n//         <tbody {...getTableBodyProps()}>\r\n//             {\r\n//                 rows.map((row) => {\r\n//                      prepareRow(row)\r\n//                      return(\r\n//                         <tr {...row.getRowProps()}>\r\n//                             {row.cells.map((cell) => {\r\n//                                 return <td {...cell.getCellProps()}>\r\n//                                     {cell.render('Cell')}\r\n//                                 </td>\r\n//                             })}\r\n//                         </tr>\r\n//                      )\r\n//                 })\r\n//             }\r\n//         </tbody>\r\n//     </table>\r\n//   )\r\n// }\r\n// export default TableShow\r\n\r\nexport default function ReactTable({ rowData, columnData }) {\r\n    const data = rowData;\r\n  \r\n    const columns = columnData;\r\n  \r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n      useTable({ columns, data }, useSortBy);\r\n  \r\n    return (\r\n      <table\r\n        {...getTableProps()}\r\n        className='table table-striped table-hover'\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted ? (\r\n                      column.isSortedDesc ? (\r\n                        <GrDescend />\r\n                      ) : (\r\n                        <GrAscend />\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return <td>{cell.render(\"Cell\")}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAAQC,QAAQ,EAACC,SAAS,QAAO,aAAa;AAC9C,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,gBAAgB;;AAEpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,eAAe,SAASC,UAAU,OAA0B;EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAW,CAAC;EACtD,MAAMC,IAAI,GAAGF,OAAO;EAEpB,MAAMG,OAAO,GAAGF,UAAU;EAE1B,MAAM;IAAEG,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAW,CAAC,GACxEf,QAAQ,CAAC;IAAEU,OAAO;IAAED;EAAK,CAAC,EAAER,SAAS,CAAC;EAExC,oBACE;IAAA,GACMU,aAAa,EAAE;IACnB,SAAS,EAAC,iCAAiC;IAAA,wBAE3C;MAAA,UACGE,YAAY,CAACG,GAAG,CAAEC,WAAW,iBAC5B;QAAA,GAAQA,WAAW,CAACC,mBAAmB,EAAE;QAAA,UACtCD,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,iBAC9B;UAAA,GAAQA,MAAM,CAACC,cAAc,CAACD,MAAM,CAACE,oBAAoB,EAAE,CAAC;UAAA,WACzDF,MAAM,CAACG,MAAM,CAAC,QAAQ,CAAC,eACxB;YAAA,UACGH,MAAM,CAACI,QAAQ,GACdJ,MAAM,CAACK,YAAY,gBACjB,QAAC,SAAS;cAAA;cAAA;cAAA;YAAA,QAAG,gBAEb,QAAC,QAAQ;cAAA;cAAA;cAAA;YAAA,QACV,GAED;UACD;YAAA;YAAA;YAAA;UAAA,QACI;QAAA;UAAA;UAAA;UAAA;QAAA,QAEV;MAAC;QAAA;QAAA;QAAA;MAAA,QAEL;IAAC;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAA,GAAWb,iBAAiB,EAAE;MAAA,UAC3BE,IAAI,CAACE,GAAG,CAAEU,GAAG,IAAK;QACjBX,UAAU,CAACW,GAAG,CAAC;QACf,oBACE;UAAA,GAAQA,GAAG,CAACC,WAAW,EAAE;UAAA,UACtBD,GAAG,CAACE,KAAK,CAACZ,GAAG,CAAEa,IAAI,IAAK;YACvB,oBAAO;cAAA,UAAKA,IAAI,CAACN,MAAM,CAAC,MAAM;YAAC;cAAA;cAAA;cAAA;YAAA,QAAM;UACvC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACC;MAET,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACI;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ;AAAC,GAjDqBjB,UAAU;EAAA,QAM5BN,QAAQ;AAAA;AAAA,KANUM,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}