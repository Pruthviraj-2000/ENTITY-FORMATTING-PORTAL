{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshith\\\\Desktop\\\\EntityFormating_Frontend\\\\entity-app\\\\src\\\\components\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { papa } from 'papaparse';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: onDrop\n  });\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this));\n  const onDrop = useCallback(acceptedFiles => {\n    papa.parse(acceptedFiles[0], {\n      header: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      complete: results => {\n        // axios.post(\"http://localhost:8080/uploadjson\",results.data)\n        console.log(results.data);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card w-75\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps({\n            className: 'dropzone'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop some files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: files\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 1\n  }, this);\n};\n_s(Upload, \"JOjEYysGxqwWCIpHnWKW77YbuRQ=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useCallback","papa","useDropzone","Upload","acceptedFiles","getRootProps","getInputProps","onDrop","files","map","file","path","size","parse","header","dynamicTyping","skipEmptyLines","complete","results","console","log","data","className"],"sources":["C:/Users/Rakshith/Desktop/EntityFormating_Frontend/entity-app/src/components/Upload.js"],"sourcesContent":["import React,{useCallback} from 'react'\r\nimport { papa } from 'papaparse';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\n\r\n  \r\n\r\n\r\nconst Upload = () => {\r\n    const {acceptedFiles, getRootProps, getInputProps} = useDropzone({\r\n        onDrop:onDrop\r\n    });\r\n    const files = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n          {file.path} - {file.size} bytes\r\n        </li>\r\n      ));\r\n      const onDrop = useCallback((acceptedFiles) => {\r\n        papa.parse(acceptedFiles[0], {\r\n          header: true,\r\n          dynamicTyping: true,\r\n          skipEmptyLines: true,\r\n          complete: (results) => {\r\n            // axios.post(\"http://localhost:8080/uploadjson\",results.data)\r\n            console.log(results.data)\r\n          },\r\n        });\r\n      }, []);\r\n  return (\r\n<div class=\"card w-75\">\r\n  <div class=\"card-body\">\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <aside>\r\n        <h4>Files</h4>\r\n        <ul>{files}</ul>\r\n      </aside>\r\n    </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,WAAW,QAAO,OAAO;AACvC,SAASC,IAAI,QAAQ,WAAW;AAChC,SAAQC,WAAW,QAAO,gBAAgB;AAAC;AAM3C,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM;IAACC,aAAa;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGJ,WAAW,CAAC;IAC7DK,MAAM,EAACA;EACX,CAAC,CAAC;EACF,MAAMC,KAAK,GAAGJ,aAAa,CAACK,GAAG,CAACC,IAAI,iBAChC;IAAA,WACGA,IAAI,CAACC,IAAI,SAAKD,IAAI,CAACE,IAAI;EAAA,GADjBF,IAAI,CAACC,IAAI;IAAA;IAAA;IAAA;EAAA,QAGnB,CAAC;EACF,MAAMJ,MAAM,GAAGP,WAAW,CAAEI,aAAa,IAAK;IAC5CH,IAAI,CAACY,KAAK,CAACT,aAAa,CAAC,CAAC,CAAC,EAAE;MAC3BU,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MACnBC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAGC,OAAO,IAAK;QACrB;QACAC,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,IAAI,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACV,oBACF;IAAK,KAAK,EAAC,WAAW;IAAA,uBACpB;MAAK,KAAK,EAAC,WAAW;MAAA,uBACpB;QAAS,SAAS,EAAC,WAAW;QAAA,wBAC5B;UAAA,GAAShB,YAAY,CAAC;YAACiB,SAAS,EAAE;UAAU,CAAC,CAAC;UAAA,wBAC5C;YAAA,GAAWhB,aAAa;UAAE;YAAA;YAAA;YAAA;UAAA,QAAI,eAC9B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA8D;QAAA;UAAA;UAAA;UAAA;QAAA,QAC1D,eACN;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACd;YAAA,UAAKE;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QACV;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GApCKL,MAAM;EAAA,QAC6CD,WAAW;AAAA;AAAA,KAD9DC,MAAM;AAsCZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}